---
title: Chapter 3 – Geocentric Models
author: "Danton Noriega-Goodwin"
date: 2024-02-02
---

```{julia}
#| code-fold: true

# set-up
using Plots
using Colors
using StatsPlots
using StatsBase
using DataFrames
using Distributions
using SpecialFunctions

default(
  labels=false, fontfamily="sans-serif", titlefontsize=10, labelfontsize=8,
  legendfontsize=5, color=:steelblue2, fillcolor=:steelblue2)
```


### Code 3.1

```{julia}
pos = [ sum(rand(Uniform(-1,1), 16)) for _ in 1:1000 ];
```

```{julia}
# NOT IN BOOK
## ATTEMPT TO REPLICATE FIG 3.2
function random_walk(n_steps=4, N=1000)
  [ rand(Uniform(-1,1), n_steps) for _ in 1:N ]
end

# final position after N steps
pos_steps_4 = [ sum(_) for _ in random_walk(4) ];
pos_steps_8 = [ sum(_) for _ in random_walk(8) ];
pos_steps_16 = [ sum(_) for _ in random_walk(16) ];

# position after each step (path)
path_steps_16 = map( x -> cumsum(vcat(0,x)), random_walk(16,200) );

l = @layout [ grid(1,1) ; grid(1,3) ]
plots = Plots.Plot[ plot() for i in 1:4 ]
plots[1] = plot(0:16, hcat(path_steps_16...), linealpha = 0.2, 
  ylabel="position", xlabel="step number")
plot!(plots[1], 0:16, path_steps_16[42], xticks=0:4:16, linecolor=:black, linewidth=1.5)
vline!(plots[1], [4,8,16], linecolor=:black, linewidth=1.5, linestyle=:dash)

plots[2:4] .= 
  density(pos_steps_4 , linewidth=2, bandwidth=0.05, ylabel="density",
          xtickfontsize=6, titlefontsize=8, title="4 steps"),
  density(pos_steps_8 , linewidth=2, bandwidth=0.05, 
          xtickfontsize=6, titlefontsize=8, title="8 steps"),
  density(pos_steps_16, linewidth=2, bandwidth=0.05, 
          xtickfontsize=6, titlefontsize=8, title="16 steps")

# add normal curve
x_values = -6:0.1:6
μ = mean(pos_steps_16)
σ = std(pos_steps_16)
y_values = pdf(Normal(μ, σ), x_values)
plot!(plots[4], x_values, y_values, linecolor=:black, linewidth=2)
plot(plots..., layout=l)
```
